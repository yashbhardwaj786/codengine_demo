// Generated by data binding compiler. Do not edit!
package com.codengineassessment.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.codengineassessment.R;
import com.codengineassessment.data.model.Food;
import com.codengineassessment.ui.viewmodel.MenuViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DialogLayoutProductDescriptionBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatImageView bannerImage;

  @NonNull
  public final ConstraintLayout bottomLayout;

  @NonNull
  public final AppCompatImageView close;

  @NonNull
  public final AppCompatButton confirmPay;

  @NonNull
  public final ImageView decrease;

  @NonNull
  public final AppCompatImageView foodImage;

  @NonNull
  public final AppCompatImageView increase;

  @NonNull
  public final LinearLayout minus;

  @NonNull
  public final LinearLayout plus;

  @NonNull
  public final AppCompatTextView quantity;

  @NonNull
  public final ConstraintLayout rootLayout;

  @NonNull
  public final View separator;

  @NonNull
  public final View topView;

  @NonNull
  public final AppCompatTextView total;

  @NonNull
  public final AppCompatTextView totalValue;

  @Bindable
  protected Integer mQuantityValue;

  @Bindable
  protected String mTotalAmount;

  @Bindable
  protected MenuViewModel mViewModel;

  @Bindable
  protected Food mData;

  protected DialogLayoutProductDescriptionBinding(Object _bindingComponent, View _root,
      int _localFieldCount, AppCompatImageView bannerImage, ConstraintLayout bottomLayout,
      AppCompatImageView close, AppCompatButton confirmPay, ImageView decrease,
      AppCompatImageView foodImage, AppCompatImageView increase, LinearLayout minus,
      LinearLayout plus, AppCompatTextView quantity, ConstraintLayout rootLayout, View separator,
      View topView, AppCompatTextView total, AppCompatTextView totalValue) {
    super(_bindingComponent, _root, _localFieldCount);
    this.bannerImage = bannerImage;
    this.bottomLayout = bottomLayout;
    this.close = close;
    this.confirmPay = confirmPay;
    this.decrease = decrease;
    this.foodImage = foodImage;
    this.increase = increase;
    this.minus = minus;
    this.plus = plus;
    this.quantity = quantity;
    this.rootLayout = rootLayout;
    this.separator = separator;
    this.topView = topView;
    this.total = total;
    this.totalValue = totalValue;
  }

  public abstract void setQuantityValue(@Nullable Integer quantityValue);

  @Nullable
  public Integer getQuantityValue() {
    return mQuantityValue;
  }

  public abstract void setTotalAmount(@Nullable String totalAmount);

  @Nullable
  public String getTotalAmount() {
    return mTotalAmount;
  }

  public abstract void setViewModel(@Nullable MenuViewModel viewModel);

  @Nullable
  public MenuViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setData(@Nullable Food data);

  @Nullable
  public Food getData() {
    return mData;
  }

  @NonNull
  public static DialogLayoutProductDescriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_layout_product_description, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DialogLayoutProductDescriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DialogLayoutProductDescriptionBinding>inflateInternal(inflater, R.layout.dialog_layout_product_description, root, attachToRoot, component);
  }

  @NonNull
  public static DialogLayoutProductDescriptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_layout_product_description, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DialogLayoutProductDescriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DialogLayoutProductDescriptionBinding>inflateInternal(inflater, R.layout.dialog_layout_product_description, null, false, component);
  }

  public static DialogLayoutProductDescriptionBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DialogLayoutProductDescriptionBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (DialogLayoutProductDescriptionBinding)bind(component, view, R.layout.dialog_layout_product_description);
  }
}
